version: '3.7'

services:
  postgres:
    image: postgres:latest
    ports:
      - "5432:5432"
    environment:
      POSTGRES_DB: stock_data_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    volumes:
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql

  data-simulator:
    build: ./data_simulator
    depends_on:
      - kafka
    restart: on-failure

  spark-master:
    image: bitnami/spark:3.4.0
    hostname: spark-master
    container_name: spark-master
    depends_on:
      - kafka
      - postgres
    environment:
      - SPARK_MODE=master
      - SPARK_RPC_AUTHENTICATION_ENABLED=no
      - SPARK_RPC_ENCRYPTION_ENABLED=no
      - SPARK_LOCAL_STORAGE_ENCRYPTION_ENABLED=no
      - SPARK_SSL_ENABLED=no
      - SPARK_USER=spark
      - KAFKA_BROKERS=kafka:29092
      - POSTGRES_HOST=postgres
      - POSTGRES_PORT=5432
      - POSTGRES_DB=stock_data_db
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    ports:
      - "8080:8080"
      - "7077:7077"
    volumes:
      - ./spark_processing:/opt/spark/work-dir
    working_dir: /opt/spark/work-dir

  spark-submit:
    image: bitnami/spark:3.4.0
    depends_on:
      - spark-master
      - kafka
      - postgres
    environment:
      - KAFKA_BROKERS=kafka:29092
      - POSTGRES_HOST=postgres
      - POSTGRES_PORT=5432
      - POSTGRES_DB=stock_data_db
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    volumes:
      - ./spark_processing:<CI/CD pipeline>
    working_dir: /opt/spark/work-dir
    command: ["spark-submit", "--master", "spark://spark-master:7077", "--packages", "org.apache.spark:spark-sql-kafka-0-10_2.12:3.4.0,org.postgresql:postgresql:42.2.10", "spark_app.py"]

  alerter:
    build: ./alerting_engine
    depends_on:
      - kafka
      - postgres
    restart: always
    environment:
      - KAFKA_BROKERS=<AWS_MSK_URL>
      - POSTGRES_HOST=postgres
      - POSTGRES_PORT=5432
      - POSTGRES_DB=stock_data_db
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres

  alert-consumer:
    build: ./alert_consumer
    depends_on:
      - kafka
    restart: on-failure

  web-app:
    build: ./web_app
    ports:
      - "5001:5001"
    depends_on:
      - kafka
      - postgres
    restart: always
    environment:
      - KAFKA_BROKERS=kafka:29092
      - POSTGRES_HOST=postgres
      - POSTGRES_PORT=5432
      - POSTGRES_DB=stock_data_db
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres